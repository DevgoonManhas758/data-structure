#include<stdio.h>
#include<stdlib.h>
#define SIZE 100
struct Node{
    int data;
    struct Node* next;
};
struct Node* front = NULL , *rear = NULL ;
void Enqueue(int value){
     struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    if(temp == NULL)
    printf("Queue Overflow!!!!\n");
    else{
        temp->data = value ;
        temp->next = NULL;
        if(front == NULL)
        front = rear = temp;
        else{
            rear->next = temp;
            rear = temp;
        }
        printf("%d inserted in Queue\n",value);
    }
}
int dequeue(){
   if(front==NULL){
       printf("Queue UNderflow");
       return -1;
   }
   else{
       struct Node *temp = front;
       front = front->next;
       if(front==NULL)
     rear = NULL;
       int val = temp->data
       free(temp);
       return val;
   }
}
int peek(){
    if(front == NULL){
        printf("Queue eMPTY!!!!\n");
        return -1;
    }
    else{
        return front->data;
    }
}
void show(){
    if(front == NULL)
    printf("Queue is Empty!!!!\n");

else{
    printf("Queue Elements Are : \n");
    struct Node* temp = front;
    while(temp != NULL){
        printf("%d\n", temp->data);
        temp=temp->next;
    }
    printf("\n");
}
int main(){
    while(1){
        printf("1. Enqueue\n");
         printf("2. Dequeue\n");
          printf("3. Peek\n");
           printf("4. show\n");
            printf("5. Exit\n");
            int choice , val , res;
            printf("Enter choice : ");
            scanf("%d",&choice);
            switch(choice){
                case 1:
                printf("Enter Element : ");
                scanf("%d",&val);
                Enqueue(val);
                
                break;
                 case 2:
                 res = Dequeue();
                 if(res != -1)
                 printf("%d dequeue from the queue\n",res);
                
                break;
                 case 3:
                 res = peek();
                 if(res != -1)
                 printf("queue top element is %d\n",res);
                
                break;
                 case 4:
                show();
                break;
                 case 5:
                exit(0);
                break;
                default:
                printf("Invalid Choice !!!!\n");
            }
    }
}
return 0;
}
