#include<stdio.h>
#include<stdlib.h>
#define SIZE 100
typedef struct PrirorityQueue{
    int element;
    int priority;
}PrirorityQueue;
PrirorityQueue pq[SIZE];
int front = -1 , count = -1;
int isEmpty(){
    return (front==-1) ? 1 : 0;                      
}
int isFull(){
   return (count==SIZE-1) ? 1 : 0;
}
void enqueue(int data , int prioirty){
    if(isEmpty()){
        count = count + 1 ;
        pq[count]. element = data;
        pq[count].priority = prioirty ;
        front = count;
       
    }
    else{
        int i;
   for(int i=0;i<=count;i++){
   if(pq[i].priority<prioirty){
       for(int j=count ; j>=i ; j--){
           pq[j+1]=pq[j];
       }
   }
      if(i==count + 1){
       pq[i].element=data;
       pq[i].priority = prioirty;
       front=0;
   }
   count++;
}
printf("element inserted !!!!\n");
}

int dequeue(){
  int data = pq[front].element;
  if(front==count)
  front=count=-1;
  else
  front++;
  return data;
 
}
int peek(){
  return pq[front].element;
}
int display(){
 printf("Priority Queue Elements are :\n");
  printf("queue Elements are: \n");
   for(int i=front ; i<=count;i++){
      printf("Elements %d : Priority %d\n", pq[i].element, pq[i].priority);
     
   }
   
}
int main(){
    while(1){
        printf("------priority Queue------\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        int choice , data;
        printf("Enter choice: ");
        scanf("%d",&choice );
        switch(choice){
            case 1:
            if(isFull())
            printf("Queue Overflow !!!!\n");
            else{
                printf("Element: ");
                scanf("%d",&data);
                enqueue(data);
            }
                break;
                case 2:
                if(isEmpty())
                printf("Queue Underflow!!!!\n");
                else
                printf("%d is dequeue from the queue\n",dequeue());
                break;
                case 3:
                if(isEmpty())
                printf("Queue is empty!!1\n");
               
                else
                printf("Element available in front of queue is %d\n",peek());
                break;
                case 4:
                if(isEmpty())
                printf("Queue is empty!!1\n");
                else
                display();
                break;
                case 5:
                exit(0);
                default:
                printf("Invalid choice !!!\n");
        }
        printf("\n");
    }
    return 0;
         
